version: '3.8'

services:
  users:
    build:
      dockerfile: Dockerfile
      context: ./users
    restart: always
    ports:
      - "3001:3001"
    environment:
      - MONGO_URI=mongodb
      - ENV=production
      - PORT=3001
    depends_on:
      - mongodb

  posts:
    build:
      dockerfile: Dockerfile
      context: ./posts
    restart: always
    ports:
      - "3002:3002"
    environment:
      - MONGO_URI=mongodb
      - ENV=production
      - PORT=3002
    depends_on:
      - mongodb

  comments:
    build:
      dockerfile: Dockerfile
      context: ./comments
    restart: always
    ports:
      - "3003:3003"
    environment:
      - MONGO_URI=mongodb
      - ENV=production
      - PORT=3003
    depends_on:
      - mongodb

  votings:
    build:
      dockerfile: Dockerfile
      context: ./votings
    restart: always
    ports:
      - "3004:3004"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGO_URI=mongodb
      - ENV=production
      - PORT=3004
    depends_on:
      - redis

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - users
      - posts
      - votings
      - comments

  prometheus:
    image: prom/prometheus:v2.33.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    restart: unless-stopped
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
      - --web.external-url=/prometheus/

  alertmanager:
    image: prom/alertmanager:v0.23.0
    ports:
      - "9093:9093"
    restart: unless-stopped
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
      - --web.route-prefix=/alertmanager
      - --web.external-url=http://alertmanager:9093/alertmanager

  mongodb:
    restart: unless-stopped
    image: mongo
    volumes:
      - fake-json-db:/data/db/fake-json
    ports:
      - "27017:27017"

  redis:
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    volumes: 
      - redis-cache:/data

volumes:
  fake-json-db:
  redis-cache:
    driver: local